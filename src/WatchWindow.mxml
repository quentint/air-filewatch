<?xml version="1.0" encoding="utf-8"?>
<s:Window xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/halo"
		   systemChrome="none" transparent="true"
		   creationComplete="onCC()" showStatusBar="false"
		   width="400" height="300"
		   minWidth="200" minHeight="200"
		   xmlns:skins="skins.*"
		   xmlns:local="*">
	<fx:Script>
		<![CDATA[
			import com.adobe.air.filesystem.FileMonitor;
			import com.adobe.air.filesystem.events.FileMonitorEvent;
			
			import flash.events.Event;
			import flash.utils.setTimeout;
			protected var f:File;
			protected var fm:FileMonitor;
			protected var fs:FileStream;
			protected function onCC():void {
				f=new File();
				fs=new FileStream();
				f.addEventListener(Event.SELECT, onFileSelect);
				f.addEventListener(Event.CANCEL, onSelectCancel);
				f.browseForOpen("Select the file to watch");
			}
			protected function onSelectCancel(e:Event):void {
				close();
			}
			protected function changeWatchedFile():void {
				f.addEventListener(Event.SELECT, onFileSelect);
				f.browseForOpen("Select the file to watch");
			}
			protected function onFileSelect(e:Event):void {
				f.removeEventListener(Event.SELECT, onFileSelect);
				f.removeEventListener(Event.CANCEL, onSelectCancel);
				loadFile();
				fm=new FileMonitor(f);
				fm.addEventListener(FileMonitorEvent.CHANGE, onFileChange);
				fm.watch();
				lbl.text=f.name;
				title="WatchWindow - "+f.name;
				lbl.toolTip=f.nativePath;
			}
			protected function loadFile():void {
				fs.open(f, FileMode.READ);
				ta.text=fs.readUTFBytes(fs.bytesAvailable);
				fs.close();
				if (tbScroll.selected) ta.appendText('');
			}
			protected function onFileChange(e:FileMonitorEvent):void {
				loadFile();
				nativeWindow.notifyUser(NotificationType.INFORMATIONAL);
				//ta.setStyle("contentBackgroundColor", 0xfffdcc);
				//setTimeout(resetBg, 250);
			}
			/*protected function resetBg():void {
				ta.setStyle("contentBackgroundColor", 0xffffff);
			}*/
			protected function buildNewWatcher():void {
				var ww:WatchWindow=new WatchWindow();
				ww.open(true);
				ww.tbTop.selected=tbTop.selected;
				ww.tbScroll.selected=tbScroll.selected;
			}
		]]>
	</fx:Script>
	<s:VGroup width="100%" height="100%" paddingTop="10" paddingRight="10" paddingBottom="10" paddingLeft="10">
		<s:HGroup width="100%">
			<s:RichEditableText color="#C2C2C2" fontWeight="bold" id="lbl" text="..."
								mouseDown="nativeWindow.startMove()" paddingLeft="6"
								editable="false" selectable="false" height="100%" verticalAlign="middle" width="100%" typographicCase="uppercase">
				<s:filters>
					<s:DropShadowFilter color="#000000" alpha=".6" angle="280" distance="1" blurX="0" blurY="0" />
				</s:filters>
			</s:RichEditableText>
			<local:IconButton toolTip="Change" click="changeWatchedFile()" icon="@Embed('skins/icons/open.png')" />
			<local:IconButton toolTip="New" click="buildNewWatcher()" icon="@Embed('skins/icons/new.png')" />
			<local:IconButton toolTip="Minimize" click="minimize()" icon="@Embed('skins/icons/min.png')" />
			<local:IconButton toolTip="Exit" click="close()" icon="@Embed('skins/icons/close.png')" />
		</s:HGroup>
		<s:HGroup width="100%" height="100%">
			<s:TextArea id="ta" width="100%" height="100%"/>
			<s:VGroup height="100%">
				<local:IconToggleButton id="tbTop" toolTip="Always on top" icon="@Embed('skins/icons/top.png')" change="nativeWindow.alwaysInFront=tbTop.selected" />
				<local:IconToggleButton id="tbScroll" toolTip="Auto scroll" icon="@Embed('skins/icons/lock.png')" selected="true" />
				<mx:Spacer height="100%" />
			</s:VGroup>
		</s:HGroup>
	</s:VGroup>
	<!--<local:IconButton right="4" bottom="4" toolTip="Resize" mouseDown="nativeWindow.startResize()" icon="@Embed('skins/icons/close.png')" />-->
	<mx:Image right="4" bottom="4"  mouseDown="nativeWindow.startResize()" source="skins/icons/grip.png"  width="13" height="13"/>
</s:Window>